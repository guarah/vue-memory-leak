'use strict';
const fs = require('fs');
const path = require('path');
const express = require('express');
const vueServerRenderer = require('vue-server-renderer');
const lruCache = require('lru-cache');

const setupDevServer = require('./build/setup-dev-server');
// in production: create server renderer using server bundle and index HTML template from real fs
// the server bundle is generated by vue-ssr-webpack-plugin
const bundle = require('./dist/vue-ssr-bundle.json');



const app = express();

let renderer;  // created from the webpack-generated server bundle

if (process.env.NODE_ENV === 'production') {
  // src/index.template.html is processed by html-webpack-plugin to inject build assets and output as dist/index.html
  const template = fs.readFileSync(path.resolve(__dirname, './dist/index.html'), 'utf-8');
  renderer = createRenderer(bundle, template);

} else {
  // in development: setup the dev server with watch and hot-reload, and create a new renderer on bundle / index template update
  setupDevServer(app, (bundle, template) => {
    renderer = createRenderer(bundle, template);
  });
}



const serve = (requestedPath, cache) => express.static(path.resolve(__dirname, requestedPath), {
  maxAge: cache && process.env.NODE_ENV === 'production' ? 60 * 60 * 24 * 30 : 0
});

// app.use('/service-worker.js', serve('./dist/service-worker.js'));
app.use('/dist', serve('./dist'));
app.use('/public', serve('./public'));



app.get('*', (req, res) => {

  if (!renderer) {
    return res.end('waiting for compilation... refresh in a moment.');
  }

  res.setHeader('Content-Type', 'text/html');

  const startTime = Date.now();

  const errorHandler = error => {
    if (error && error.code === 404) {
      res.status(404).end('404 | Page Not Found');
    } else {
      // Render Error Page or Redirect
      res.status(500).end('500 | Internal Server Error');
      console.error(`error during render : ${req.url}`);
      console.error(error);
    }
  }

  renderer.renderToStream({ url: req.url })
    .on('error', errorHandler)
    .on('end', () => {
      console.log(`${Date.now() - startTime}ms to render ${req.url}`);
    })
    .pipe(res);

});



const port = process.env.PORT || 4000;
app.listen(port, () => {
  console.log(`server started at http://localhost:${port}`);
});



function createRenderer(bundle, template) {
  // https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/README.md#why-use-bundlerenderer
  return vueServerRenderer.createBundleRenderer(bundle, {
    template,
    cache: lruCache({
      max: 10,
      maxAge: 1000 * 60 * 5 // 5 minutes
    })
  });
}